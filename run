#!/bin/sh

# run
# Usage: ./run { start | stop | restart }
# app_admin is a management script for gunicorn.
# It is designed to work on the WebFaction platform with minimal effort.
# The script requires gunicorn installed and enabled within your apps INSTALLED_APPS setting.
# See http://gunicorn.org/ for instructions on gunicorn_django's use and installtion.

# Get the current folder, the one where this run command is located
CURRENT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Activate virtual environment. These 2 lines may be disabled/deleted if you do not use virtualenv.
ENV_PATH="$CURRENT_PATH/.environment"
. $ENV_PATH/bin/activate

# The project location, settings.py, urls.py etc....
PROJECTLOC="$CURRENT_PATH"

# The servers IP adderss, this should be 127.0.0.1.
ADDRESS='127.0.0.1'

# The port of your Django app. This will be located within the control panel in the applications details.
SERVER_PORT='31045'

# Set PYTHON to '/usr/local/bin/python2.X' for a regular deployment and the path of the binary in the virtualenv if you are using one.
PYTHON="$ENV_PATH/bin/python"

# The path to gunicorn_django
GUNICORN="$ENV_PATH/bin/gunicorn"

# The wsgi app, in format pythonfile:appObject
WSGIAPP=app:cvapp

# The default args for gunicorn_django see http://gunicorn.org/configure.html#contents
DEFAULT_ARGS="--workers=1 "

# Do not edit below this line
BASE_CMD="$GUNICORN $WSGIAPP $DEFAULT_ARGS"
SERVER_PID="$PROJECTLOC/gunicorn_$SERVER1_PORT.pid"

start_server () {
  if [ -f $1 ]; then
    if [ "$(ps -p `cat $1` | wc -l)" -gt 1 ]; then
       echo "A server is already running on ${ADDRESS}:${2}"
       return
    fi
  fi
  cd $PROJECTLOC
  echo "starting ${ADDRESS}:${2}"
  $BASE_CMD --daemon --bind=$ADDRESS:$SERVER_PORT --pid=$1
}

stop_server (){
  if [ -f $1 ] && [ "$(ps -p `cat $1` | wc -l)" -gt 1 ]; then
    echo "stopping server ${ADDRESS}:${2}"
    kill -9 `cat $1`
    rm $1
  else
    if [ -f $1 ]; then
      echo "server ${ADDRESS}:${2} not running"
    else
      echo "No pid file found for server ${ADDRESS}:${2}"
    fi
  fi
}

case "$1" in
'start')
  start_server $SERVER_PID $SERVER_PORT
  ;;
'stop')
  stop_server $SERVER_PID $SERVER_PORT
  ;;
'restart')
  stop_server $SERVER_PID $SERVER_PORT
  sleep 2
  start_server $SERVER_PID $SERVER_PORT
  ;;
*)
  echo "Usage: $0 { start | stop | restart }"
  ;;
esac

exit 0
